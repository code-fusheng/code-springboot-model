package xyz.fusheng.code.springboot.model.learn.模式.proxy;

/**
 * @author code-fusheng <2561035977@qq.com>
 * @desc ProxyTest
 * @date 2022-12-06 19:59:48
 * 代理模式测试类
 * 代理模式（Proxy Pattern）是指建立某一个对象的代理对象，并且由代理对象控制对原对象的引用。
 * 代理模式功能:
 * 隔离功能: 通过建立一个目标对象的代理对象，可以防止外部对目标对象的直接访问，这样就使得目标对象与外部隔离。我们可以在代理对象中增加身份验证、权限验证等功能，从而实现对目标对象的安全防护。
 * 拓展功能: 对一个目标对象建立代理对象后，可以在代理对象中增加更多的扩展功能。例如，可以在代理对象中增加日志记录功能，这样对目标对象的访问都会被代理对象计入日志。
 * 直接替换: 对一个目标对象建立代理对象后，可以直接使用代理对象完全替换目标对象，由代理对象来实现全部的功能。例如，MyBatis 中数据库操作只是一个抽象方法，但实际运行中会建立代理对象来完成数据库的读写操作。
 *
 */

public class ProxyTest {



}

